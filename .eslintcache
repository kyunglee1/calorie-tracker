[{"/Users/kyunglee/Desktop/nutrition-tracker-app/src/index.js":"1","/Users/kyunglee/Desktop/nutrition-tracker-app/src/App/index.js":"2","/Users/kyunglee/Desktop/nutrition-tracker-app/src/NutritionTracker/index.js":"3","/Users/kyunglee/Desktop/nutrition-tracker-app/src/SearchBar/index.js":"4","/Users/kyunglee/Desktop/nutrition-tracker-app/src/ResultsTable/index.js":"5","/Users/kyunglee/Desktop/nutrition-tracker-app/src/CalorieLog/index.js":"6","/Users/kyunglee/Desktop/nutrition-tracker-app/src/CalorieLogPane/index.js":"7","/Users/kyunglee/Desktop/nutrition-tracker-app/src/ResultRow/index.js":"8","/Users/kyunglee/Desktop/nutrition-tracker-app/src/hooks/useLocalStorage.js":"9","/Users/kyunglee/Desktop/nutrition-tracker-app/src/helper/getUrl.js":"10"},{"size":225,"mtime":1611902921031,"results":"11","hashOfConfig":"12"},{"size":207,"mtime":1612146879652,"results":"13","hashOfConfig":"12"},{"size":1641,"mtime":1612849928618,"results":"14","hashOfConfig":"12"},{"size":453,"mtime":1612849928623,"results":"15","hashOfConfig":"12"},{"size":583,"mtime":1612849928621,"results":"16","hashOfConfig":"12"},{"size":3030,"mtime":1612761246878,"results":"17","hashOfConfig":"12"},{"size":1886,"mtime":1612849928617,"results":"18","hashOfConfig":"12"},{"size":509,"mtime":1612504792439,"results":"19","hashOfConfig":"12"},{"size":588,"mtime":1612504792444,"results":"20","hashOfConfig":"12"},{"size":387,"mtime":1612846038365,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dhxver",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kyunglee/Desktop/nutrition-tracker-app/src/index.js",[],"/Users/kyunglee/Desktop/nutrition-tracker-app/src/App/index.js",[],"/Users/kyunglee/Desktop/nutrition-tracker-app/src/NutritionTracker/index.js",[],"/Users/kyunglee/Desktop/nutrition-tracker-app/src/SearchBar/index.js",[],["44","45","46","47","48"],"/Users/kyunglee/Desktop/nutrition-tracker-app/src/ResultsTable/index.js",[],"/Users/kyunglee/Desktop/nutrition-tracker-app/src/CalorieLog/index.js",["49","50"],"/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport CalorieLogPane from '../CalorieLogPane/index';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport './index.css';\n\nconst CalorieLog = ({ results, fdcId, clickedAdd }) => {\n  const [panes, setPanes] = useLocalStorage();\n\n  // Save calorie-log entry to panes\n  useEffect(() => {\n    const isDuplicate = panes.find((pane) => pane.id === fdcId);\n\n    if (isDuplicate || !fdcId) return;\n\n    // Item that user selected\n    const entryItem = results.find((result) => result.fdcId === fdcId);\n    // Item's calories per 100 g/mL portion\n    const caloriesPer100 =\n      entryItem.foodNutrients.find((x) => x.nutrientId === 1008)?.value ?? 0;\n\n    setPanes((prevPanes) => [\n      ...prevPanes,\n      {\n        id: fdcId,\n        entryItem,\n        calorieCount: caloriesPer100, // Current calorie count\n        portionSize: '100', // Current portion size (g/mL)\n      },\n    ]);\n  }, [clickedAdd]);\n\n  // Indicate (blink) pre-existing log entry\n  useEffect(() => {\n    const duplicate = panes.find((pane) => pane.id === fdcId);\n\n    if (!duplicate) return;\n\n    /* Add type: 'duplicate' to pre-existing pane, to\n       be passed as a prop. */\n    setPanes((prevPanes) => {\n      const newPanes = [...prevPanes];\n      const index = newPanes.indexOf(duplicate);\n      newPanes[index] = { ...newPanes[index], type: 'duplicate' };\n      return newPanes;\n    });\n    // Remove type: 'duplicate' after 500 ms\n    setTimeout(() => {\n      setPanes((prevPanes) => {\n        const newPanes = [...prevPanes];\n        const index = newPanes.findIndex((pane) => pane.id === fdcId);\n        newPanes[index] = { ...newPanes[index], type: '' };\n        return newPanes;\n      });\n    }, 500);\n  }, [clickedAdd]);\n\n  // Handler to remove entry by id\n  const handleDeleteClick = (id) => {\n    setPanes((prevPanes) => [...prevPanes].filter((pane) => pane.id !== id));\n  };\n\n  /* Handler to update an entry's calorieCount\n     on portion-size change. */\n  const handleInputChange = (id, calorieCount, portionSize) => {\n    setPanes((prevPanes) => {\n      const newPanes = [...prevPanes];\n      const index = newPanes.findIndex((pane) => pane.id === id);\n      newPanes[index] = { ...newPanes[index], calorieCount, portionSize };\n      return newPanes;\n    });\n  };\n\n  const panesList = panes.map((pane) => (\n    <CalorieLogPane\n      key={pane.id}\n      entry={pane.entryItem}\n      portionSize={pane.portionSize}\n      onInputChange={handleInputChange}\n      onDeleteClick={handleDeleteClick}\n      paneType={pane.type}\n    />\n  ));\n\n  const totalCalories = panes.reduce(\n    (total, pane) => total + pane.calorieCount,\n    0\n  );\n\n  return (\n    <div className=\"log-container\">\n      <div id=\"log-header\">Calorie Log</div>\n      <div className=\"panes\">{panesList}</div>\n      {panes.length > 0 && (\n        <div id=\"log-footer\">\n          <span>{`Total: ${totalCalories} kcal`}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CalorieLog;\n","/Users/kyunglee/Desktop/nutrition-tracker-app/src/CalorieLogPane/index.js",[],"/Users/kyunglee/Desktop/nutrition-tracker-app/src/ResultRow/index.js",[],"/Users/kyunglee/Desktop/nutrition-tracker-app/src/hooks/useLocalStorage.js",[],"/Users/kyunglee/Desktop/nutrition-tracker-app/src/helper/getUrl.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":31,"column":6,"nodeType":"63","endLine":31,"endColumn":18,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"65","line":56,"column":6,"nodeType":"63","endLine":56,"endColumn":18,"suggestions":"66"},"lines-around-directive",["67"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fdcId', 'panes', 'results', and 'setPanes'. Either include them or remove the dependency array.","ArrayExpression",["68"],"React Hook useEffect has missing dependencies: 'fdcId', 'panes', and 'setPanes'. Either include them or remove the dependency array.",["69"],"padding-line-between-statements",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},"Update the dependencies array to be: [clickedAdd, fdcId, panes, results, setPanes]",{"range":"74","text":"75"},"Update the dependencies array to be: [clickedAdd, fdcId, panes, setPanes]",{"range":"76","text":"77"},[974,986],"[clickedAdd, fdcId, panes, results, setPanes]",[1774,1786],"[clickedAdd, fdcId, panes, setPanes]"]